-- MySQL Script generated by MySQL Workbench
-- Thu Sep  4 13:39:19 2014
-- Model: New Model    Version: 1.0
SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema git_scan_db
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `git_scan_db` ;
CREATE SCHEMA IF NOT EXISTS `git_scan_db` DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci ;
USE `git_scan_db` ;

-- -----------------------------------------------------
-- Table `git_scan_db`.`requests`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `git_scan_db`.`requests` ;

CREATE TABLE IF NOT EXISTS `git_scan_db`.`requests` (
  `idrequests` INT NOT NULL AUTO_INCREMENT,
  `created` DATETIME NULL,
  `language` VARCHAR(45) NULL,
  `fork` TINYINT(1) NULL,
  `per_page` INT NULL,
  `sort` VARCHAR(45) NULL,
  `order` VARCHAR(45) NULL,
  `page_num` INT NULL,
  `query` VARCHAR(45) NULL,
  `total_count` VARCHAR(45) NULL,
  `incomplete_result` VARCHAR(45) NULL,
  PRIMARY KEY (`idrequests`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `git_scan_db`.`users`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `git_scan_db`.`users` ;

CREATE TABLE IF NOT EXISTS `git_scan_db`.`users` (
  `idusers` INT NOT NULL AUTO_INCREMENT,
  `login` VARCHAR(45) NULL,
  `id` INT NULL,
  `avatar_url` VARCHAR(2083) NULL,
  `url` VARCHAR(2083) NULL,
  `type` VARCHAR(45) NULL,
  `site_admin` BINARY NULL,
  PRIMARY KEY (`idusers`))
ENGINE = InnoDB;

CREATE UNIQUE INDEX `login_UNIQUE` ON `git_scan_db`.`users` (`login` ASC);

CREATE UNIQUE INDEX `id_UNIQUE` ON `git_scan_db`.`users` (`id` ASC);


-- -----------------------------------------------------
-- Table `git_scan_db`.`repositories`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `git_scan_db`.`repositories` ;

CREATE TABLE IF NOT EXISTS `git_scan_db`.`repositories` (
  `idrepositories` INT NOT NULL AUTO_INCREMENT,
  `id` INT NOT NULL,
  `name` VARCHAR(45) NULL,
  `full_name` VARCHAR(45) NULL,
  `description` VARCHAR(45) NULL,
  `created_at` DATETIME NULL,
  `updated_at` DATETIME NULL,
  `pushed_at` DATETIME NULL,
  `size` INT NULL,
  `stargazers_count` INT NULL,
  `watchers_count` INT NULL,
  `language` VARCHAR(45) NULL,
  `has_issues` BINARY NULL,
  `has_downloads` BINARY NULL,
  `has_wiki` BINARY NULL,
  `forks_count` INT NULL,
  `mirror_url` VARCHAR(2083) NULL,
  `open_issues_count` INT NULL,
  `watchers` INT NULL,
  `default_branch` VARCHAR(45) NULL,
  `score` DECIMAL(5) NULL,
  `owner_id` INT NOT NULL,
  `forks` INT NULL,
  `homepage` VARCHAR(2083) NULL,
  `open_issues` INT NULL,
  `request_id` INT NOT NULL,
  PRIMARY KEY (`idrepositories`, `id`, `owner_id`, `request_id`),
  CONSTRAINT `request`
    FOREIGN KEY (`request_id`)
    REFERENCES `git_scan_db`.`requests` (`idrequests`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `owner`
    FOREIGN KEY (`owner_id`)
    REFERENCES `git_scan_db`.`users` (`idusers`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE UNIQUE INDEX `git_id_UNIQUE` ON `git_scan_db`.`repositories` (`id` ASC);

CREATE UNIQUE INDEX `name_UNIQUE` ON `git_scan_db`.`repositories` (`name` ASC);

CREATE UNIQUE INDEX `full_name_UNIQUE` ON `git_scan_db`.`repositories` (`full_name` ASC);

CREATE INDEX `request_idx` ON `git_scan_db`.`repositories` (`request_id` ASC);

CREATE INDEX `owner_idx` ON `git_scan_db`.`repositories` (`owner_id` ASC);

SET SQL_MODE = '';
GRANT USAGE ON *.* TO mxia;
 DROP USER mxia;
SET SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';
CREATE USER 'mxia' IDENTIFIED BY 'password';

GRANT ALL ON `git_scan_db`.* TO 'mxia';

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
